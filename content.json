{"pages":[],"posts":[{"title":"Nuxt3项目搭建官网（Nuxt3+arco-design详细步骤）","text":"1. Nuxt3的安装前提，确保有Nuxt3的安装环境 123Node.js（必要）Visual Studio Code（推荐）Volar（推荐） node.js 版本之间有差异，安装Nuxt3目前官方推荐 v14 和 v16，或更高的版本。 1.1. 安装新建 Nuxt3 项目首先在你的Nuxt3工作空间下新建一个Nuxt3项目,打开终端输入下方命令 npx 安装npx 是 npm5.2 之后发布的一个命令，可以代替 npm 命令安装依赖或包。 1npx nuxi init nuxt-app # nuxt-app 是项目名 1.2. Nuxt3 运行端口1234# 进入nuxt-app项目，安装依赖cd nuxt-app# npmnpm install 123# 启动项目# npmnpm run dev 访问：http://localhost:3000/ 目前为止，我们就可以开始开发Nuxt3项目啦。 2. arco-design的安装配置2.1. 完整引入vue &gt;= 3.2.0 注意：由于 Vue3 不再支持 IE 浏览器环境，ArcoVue 也不再支持 IE 浏览器环境。 安装1234# npmnpm install --save-dev @arco-design/web-vue# yarnyarn add --dev @arco-design/web-vue 因为 arco-design 属于第三方插件，需要在 plugins 目录配置 根目录下新建 plugins 目录， 在目录下新建 arco-design.ts 文件（注意：默认必须在 plugins 下新建配置文件，这是“约定”，详情见官网） 在 plugins/arco-design.ts 中配置全局 123456import { defineNuxtPlugin } from '#app'import ArcoVue from '@arco-design/web-vue';export default defineNuxtPlugin(nuxtApp =&gt; { nuxtApp.vueApp.use(ArcoVue)}) 在 nuxt.config.ts 中全局配置样式 css 的位置 1234567// https://v3.nuxtjs.org/api/configuration/nuxt.configexport default defineNuxtConfig({ css: [ '@arco-design/web-vue/dist/arco.css' ]}) 2.2. 按需加载（模板）如果使用模板方式进行开发，可以使用 unplugin-vue-components 和 unplugin-auto-import 这两款插件来开启按需加载及自动导入的支持。插件会自动解析模板中的使用到的组件，并导入组件和对应的样式文件。需要组件库 version &gt;= 2.11.0。 123# npmnpm install --save-dev unplugin-auto-importnpm install --save-dev unplugin-vue-components 在 nuxt.config.ts 中配置 12345678910111213141516171819202122232425262728293031// https://v3.nuxtjs.org/api/configuration/nuxt.configimport AutoImport from 'unplugin-auto-import/vite'import Components from 'unplugin-vue-components/vite';import { ArcoResolver } from 'unplugin-vue-components/resolvers';export default defineNuxtConfig({ app: { head: { title: 'Nuxt3-ArcoDesign', meta: [ { name: 'keywords', content: 'Nuxt3,arco-design' }, { name: 'description', content: '使用 Vue 3 构建您的下一个应用，体验混合渲染、强大的数据获取和新功能。 Nuxt 3 是一个开源框架，使 Web 开发变得简单而强大。' }, ], }, }, vite: { plugins: [ AutoImport({ resolvers: [ArcoResolver()], }), Components({ resolvers: [ ArcoResolver({ sideEffect: true }) ] }) ], },}) 2.3. 演示使用打开 app.vue ，初始内容如下，&lt;NuxtWelcome /&gt; 是官方的欢迎页面 12345&lt;template&gt; &lt;div&gt; &lt;NuxtWelcome /&gt; &lt;/div&gt;&lt;/template&gt; 替换成使用 arco-design 的代码查看是否安装配置成功 1234567891011&lt;template&gt; &lt;div&gt; &lt;a-space&gt; &lt;a-button type=&quot;primary&quot;&gt;Primary&lt;/a-button&gt; &lt;a-button&gt;Secondary&lt;/a-button&gt; &lt;a-button type=&quot;dashed&quot;&gt;Dashed&lt;/a-button&gt; &lt;a-button type=&quot;outline&quot;&gt;Outline&lt;/a-button&gt; &lt;a-button type=&quot;text&quot;&gt;Text&lt;/a-button&gt; &lt;/a-space&gt; &lt;/div&gt;&lt;/template&gt; npm run dev 启动项目，访问 http://localhost:3000/ 3.1.更详细的配置可访问 https://github.com/AnderPeng/Nuxt3-ArcoDesign 查看 useFetch的请求封装 api的使用 layouts布局 composables的使用","link":"/2022/11/11/Next3-ArcoDesign/"}],"tags":[{"name":"Nuxt3","slug":"Nuxt3","link":"/tags/Nuxt3/"}],"categories":[]}